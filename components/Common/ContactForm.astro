---
const { class: className, ...rest } = Astro.props;
---

<form
  class={className}
  {...rest}
  name="contact"
  method="POST"
  netlify-honeypot="bot-field"
  data-netlify="true"
>
  <p class="hidden">
    <label>
      Don&apos;t fill this out if you&apos;re human: <input name="bot-field" />
    </label>
  </p>
  <section class="personalDetails">
    <div>
      <p>
        <label for="name">First Name</label>
        <input type="text" name="name" id="name" required />
      </p>
      <p>
        <label for="lastName">Last Name</label>
        <input type="text" name="lastName" id="lastName" required />
      </p>
    </div>
    <div>
      <p>
        <label for="email">E-mail</label>
        <input type="email" name="email" id="email" required />
      </p>
      <p>
        <label for="company">Company</label>
        <input type="text" name="company" id="company" required />
      </p>
    </div>
  </section>
  <p>
    <label for="subject">Subject</label>
    <input type="text" name="subject" id="subject" required />
  </p>

  <p>
    <label for="message">How can I help you?</label>
    <textarea name="message" rows="8" id="message"></textarea>
  </p>
  <button type="submit">Submit</button>
</form>

<script>
  const handleSubmit = (event: Event) => {
    event.preventDefault();

    const myForm = event.target as HTMLFormElement;
    const formData = new FormData(myForm);

    fetch('/', {
      method: 'POST',
      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
      //@ts-ignore
      body: new URLSearchParams(formData).toString(),
    })
      .then(() => {
        alert(
          "Thank you for your submission, we'll get back to you as soon as possible!",
        );
        form.reset();
      })
      .catch((error) => alert(error));
  };

  const form = document.querySelector('form') as HTMLFormElement;
  if (form) {
    form.addEventListener('submit', handleSubmit);
  } else {
    console.error('Form not found');
  }
</script>

<style lang="scss">
  form {
    display: flex;
    flex-direction: column;
    container-type: inline-size;
    gap: var(--common-gap-mobile);
    background-color: var(--background-color-secondary);
    max-width: 500px;
    width: 100%;
    border-radius: 1.5rem;
    padding: 1rem;
    margin: 0 auto;
    .hidden {
      display: none;
    }
    .personalDetails {
      display: grid;
      gap: var(--common-gap-mobile);
      div {
        display: grid;
        gap: 0.5rem;
      }
    }

    p {
      display: flex;
      flex-direction: column;
      gap: 0.3rem;
      input {
        border: none;
        border-radius: 2rem;
        padding: 0.5rem 1rem;
      }
      textarea {
        resize: none;
        border: none;
        border-radius: 1.5rem;
        padding: 0.7rem;
      }
      input:focus,
      textarea:focus {
        outline: black;
        border: 1px solid black;
      }
    }
    button {
      width: 80%;
      margin: 0 auto;
      font-size: 1.2rem;
      padding: 0.5em 2em;
      border-radius: 1.25em;
      border: 1px solid black;
      background-color: var(--background-color-primary);
      cursor: pointer;
    }
  }
  @media (min-width: 500px) {
    form {
      padding: 2rem;
      gap: var(--common-gap-mobile);
      .personalDetails {
        gap: 1rem;
        div {
          display: grid;
          grid-template-columns: 1fr 1fr;
          gap: var(--common-gap-mobile);
        }
      }
    }
  }
</style>
